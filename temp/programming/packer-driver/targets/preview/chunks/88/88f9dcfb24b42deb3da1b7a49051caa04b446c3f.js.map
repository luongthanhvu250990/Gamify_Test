{"version":3,"sources":["file:///Users/admin/Documents/Gamify_Test/assets/Scripts/Problem2/ScrollComp.ts"],"names":["_decorator","Component","instantiate","Node","NodePool","Prefab","UITransform","ItemComp","ccclass","property","ScrollComp","contentTrans","countData","itemTotal","pool","onLoad","contentNode","getComponent","start","init","initTotal","i","newItem","createItem","addItemToTop","createNode","item","size","get","itemPrefab","deleteNode","put","newNode","setData","setSiblingIndex","setParent","y","itemSpacing","setPosition","deleteItem","triggerAdd","triggerRemove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,Q,OAAAA,Q;AACAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,W,OAAAA,W;;AAGOC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;4BAGjBU,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ,CAACN,IAAD,C,UAGRM,QAAQ,CAACJ,MAAD,C,UAGRI,QAAQ,E,2BARX,MACaC,UADb,SACgCT,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAUhCU,YAVgC,GAUJ,IAVI;AAAA,eAWhCC,SAXgC,GAWZ,CAXY;AAAA,eAYhCC,SAZgC,GAYZ,CAZY;AAAA,eAahCC,IAbgC,GAaf,IAbe;AAAA;;AAe9BC,QAAAA,MAAM,GAAS;AACvB,eAAKJ,YAAL,GAAoB,KAAKK,WAAL,CAAiBC,YAAjB,CAA8BX,WAA9B,CAApB;AACA,eAAKQ,IAAL,GAAY,IAAIV,QAAJ,EAAZ;AACD;;AAESc,QAAAA,KAAK,GAAS;AACtB,eAAKC,IAAL;AACD;;AAEOA,QAAAA,IAAI,GAAG;AACb,cAAMC,SAAS,GAAG,EAAlB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EAAoC;AAClC,gBAAIC,OAAO,GAAG,KAAKC,UAAL,EAAd;AACA,iBAAKC,YAAL,CAAkBF,OAAlB;AACD;AACF;;AAEOG,QAAAA,UAAU,GAAS;AACzB,cAAIC,IAAU,GAAG,IAAjB;AACA,cAAI,KAAKZ,IAAL,CAAUa,IAAV,KAAmB,CAAvB,EAA0BD,IAAI,GAAG,KAAKZ,IAAL,CAAUc,GAAV,EAAP,CAA1B,KACK;AACHF,YAAAA,IAAI,GAAGxB,WAAW,CAAC,KAAK2B,UAAN,CAAlB;AACD;AACD,iBAAOH,IAAP;AACD;;AAEOI,QAAAA,UAAU,CAACJ,IAAD,EAAa;AAC7B,eAAKZ,IAAL,CAAUiB,GAAV,CAAcL,IAAd;AACD;;AAEOH,QAAAA,UAAU,GAAS;AACzB,eAAKX,SAAL;AACA,cAAIoB,OAAO,GAAG,KAAKP,UAAL,EAAd;AAEAO,UAAAA,OAAO,CAACf,YAAR;AAAA;AAAA,oCAA+BgB,OAA/B,CAAuC,KAAKrB,SAA5C;AACA,iBAAOoB,OAAP;AACD;;AAEDR,QAAAA,YAAY,CAACQ,OAAD,EAAgB;AAC1BA,UAAAA,OAAO,CAACE,eAAR,CAAwB,KAAKrB,SAA7B;AACAmB,UAAAA,OAAO,CAACG,SAAR,CAAkB,KAAKnB,WAAvB;AAEA,cAAIoB,CAAC,GAAG,KAAKvB,SAAL,GAAiB,KAAKwB,WAA9B;AACAL,UAAAA,OAAO,CAACM,WAAR,CAAoB,CAApB,EAAuBF,CAAvB,EAA0B,CAA1B;AACA,eAAKvB,SAAL;AACD;;AAEO0B,QAAAA,UAAU,CAACb,IAAD,EAAa;AAC7B,eAAKb,SAAL;AACA,eAAKiB,UAAL,CAAgBJ,IAAhB;AACD,SAjEuC,CAmExC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAc,QAAAA,UAAU,GAAG;AACX,cAAIlB,OAAO,GAAG,KAAKC,UAAL,EAAd;AACA,eAAKC,YAAL,CAAkBF,OAAlB;AACD;;AAEDmB,QAAAA,aAAa,GAAG,CAAE;;AAnFsB,O;;;;;iBAEZ,I;;;;;;;iBAGC,I;;;;;;;iBAGC,E","sourcesContent":["import {\n  _decorator,\n  Component,\n  instantiate,\n  Node,\n  NodePool,\n  Prefab,\n  UITransform,\n  Vec3,\n} from \"cc\";\nimport { ItemComp } from \"./ItemComp\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"ScrollComp\")\nexport class ScrollComp extends Component {\n  @property(Node)\n  private contentNode: Node = null;\n\n  @property(Prefab)\n  private itemPrefab: Prefab = null;\n\n  @property()\n  private itemSpacing: number = 50;\n\n  private contentTrans: UITransform = null;\n  private countData: number = 0;\n  private itemTotal: number = 0;\n  private pool: NodePool = null;\n\n  protected onLoad(): void {\n    this.contentTrans = this.contentNode.getComponent(UITransform);\n    this.pool = new NodePool();\n  }\n\n  protected start(): void {\n    this.init();\n  }\n\n  private init() {\n    const initTotal = 20;\n    for (let i = 0; i < initTotal; i++) {\n      let newItem = this.createItem();\n      this.addItemToTop(newItem);\n    }\n  }\n\n  private createNode(): Node {\n    let item: Node = null;\n    if (this.pool.size() > 0) item = this.pool.get();\n    else {\n      item = instantiate(this.itemPrefab);\n    }\n    return item;\n  }\n\n  private deleteNode(item: Node) {\n    this.pool.put(item);\n  }\n\n  private createItem(): Node {\n    this.countData++;\n    let newNode = this.createNode();\n\n    newNode.getComponent(ItemComp).setData(this.countData);\n    return newNode;\n  }\n\n  addItemToTop(newNode: Node) {\n    newNode.setSiblingIndex(this.itemTotal);\n    newNode.setParent(this.contentNode);\n\n    let y = this.itemTotal * this.itemSpacing;\n    newNode.setPosition(0, y, 0);\n    this.itemTotal++;\n  }\n\n  private deleteItem(item: Node) {\n    this.itemTotal--;\n    this.deleteNode(item);\n  }\n\n  //   setNumberOfItem(num: number) {\n  //     this.contentTrans.height = this.itemSpacing * num;\n  //     this.totalItem = num;\n\n  //     for (let i = 0; i < num; i++) {\n  //       let newNode = this.createNode();\n  //       newNode.setParent(this.contentNode);\n  //       let y = i * this.itemSpacing;\n  //       newNode.setPosition(0, y, 0);\n  //     }\n  //   }\n  triggerAdd() {\n    let newItem = this.createItem();\n    this.addItemToTop(newItem);\n  }\n\n  triggerRemove() {}\n}\n"]}