{"version":3,"sources":["file:///Users/admin/Documents/GitHub/Gamify_Test/assets/Scripts/Problem2/ScrollComp.ts"],"names":["_decorator","Component","instantiate","macro","Node","NodePool","Prefab","UITransform","ItemComp","ccclass","property","ScrollComp","contentTrans","countData","itemTotal","pool","yOffset","onLoad","contentNode","getComponent","start","init","update","dt","offset","Math","min","abs","snapSpeed","children","forEach","child","setPosition","position","x","y","initTotal","i","newItem","createItem","addItemToTop","createNode","item","size","get","itemPrefab","deleteNode","put","newNode","setData","setSiblingIndex","childCount","length","topChild","itemSpacing","setParent","deleteItem","triggerAdd","triggerRemove","bot","onClick","unscheduleAllCallbacks","schedule","bind","REPEAT_FOREVER"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  instantiate,\n  macro,\n  Node,\n  NodePool,\n  Prefab,\n  UITransform,\n  Vec3,\n} from \"cc\";\nimport { ItemComp } from \"./ItemComp\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"ScrollComp\")\nexport class ScrollComp extends Component {\n  @property(Node)\n  private contentNode: Node = null;\n\n  @property(Prefab)\n  private itemPrefab: Prefab = null;\n\n  @property()\n  private itemSpacing: number = 50;\n\n  @property()\n  private snapSpeed = 3000;\n\n  private contentTrans: UITransform = null;\n  private countData: number = 0;\n  private itemTotal: number = 0;\n  private pool: NodePool = null;\n\n  private yOffset: number = 0;\n\n\n  protected onLoad(): void {\n    this.contentTrans = this.contentNode.getComponent(UITransform);\n    this.pool = new NodePool();\n  }\n\n  protected start(): void {\n    this.init();\n  }\n\n  protected update(dt: number): void {\n    if (this.yOffset == 0) return;\n\n    let offset = Math.min(Math.abs(this.yOffset), dt * this.snapSpeed);\n    this.contentNode.children.forEach((child) => {\n      child.setPosition(child.position.x, child.position.y - offset);\n    });\n    this.yOffset += offset;\n  }\n\n  private init() {\n    const initTotal = 20;\n    for (let i = 0; i < initTotal; i++) {\n      let newItem = this.createItem();\n      this.addItemToTop(newItem);\n    }\n  }\n\n  private createNode(): Node {\n    let item: Node = null;\n    if (this.pool.size() > 0) item = this.pool.get();\n    else {\n      item = instantiate(this.itemPrefab);\n    }\n    return item;\n  }\n\n  private deleteNode(item: Node) {\n    this.pool.put(item);\n  }\n\n  private createItem(): Node {\n    this.countData++;\n    let newNode = this.createNode();\n\n    newNode.getComponent(ItemComp).setData(this.countData);\n    return newNode;\n  }\n\n  addItemToTop(newNode: Node) {\n    newNode.setSiblingIndex(this.itemTotal);\n\n    let y = 0;\n    let childCount = this.contentNode.children.length;\n    let topChild = this.contentNode.children[childCount - 1];\n    if (topChild) {\n      y = topChild.position.y + this.itemSpacing;\n    }\n    newNode.setParent(this.contentNode);\n    newNode.setPosition(0, y, 0);\n\n    this.itemTotal++;\n  }\n\n  private deleteItem(item: Node) {\n    this.itemTotal--;\n    this.deleteNode(item);\n  }\n\n  triggerAdd() {\n    let newItem = this.createItem();\n    this.addItemToTop(newItem);\n  }\n\n  triggerRemove() {\n    let bot = this.contentNode.children[0];\n    this.deleteItem(bot);\n    this.yOffset -= this.itemSpacing;\n  }\n\n  onClick() {\n    this.unscheduleAllCallbacks();\n    this.schedule(\n      this.triggerRemove.bind(this),\n      0.1,\n      macro.REPEAT_FOREVER,\n      0.1\n    );\n    this.schedule(this.triggerAdd.bind(this), 0.05, macro.REPEAT_FOREVER, 0.05);\n  }\n}\n"]}