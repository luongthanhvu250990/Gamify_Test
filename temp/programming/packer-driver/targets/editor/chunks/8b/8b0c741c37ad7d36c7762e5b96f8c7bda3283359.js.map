{"version":3,"sources":["file:///Users/admin/Documents/GitHub/Gamify_Test/assets/Scripts/Problem2/ItemComp.ts"],"names":["_decorator","Color","Component","Label","randomRange","Sprite","ccclass","property","ItemComp","setData","numData","node","name","color","fromHEX","numToColor","bgSprite","contentLabel","string","toString","num","clampedNum","Math","abs","hexColor","padStart"],"mappings":";;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AACAC,MAAAA,K,OAAAA,K;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,K,OAAAA,K;AAGAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,M,OAAAA,M;;;;;;;;;OAEI;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAGjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,UAELC,QAAQ,CAACF,MAAD,C,UAGRE,QAAQ,CAACJ,KAAD,C,2BALX,MACaK,QADb,SAC8BN,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAOtCO,QAAAA,OAAO,CAACC,OAAD,EAAkB;AACvB,eAAKC,IAAL,CAAUC,IAAV,GAAkB,QAAOF,OAAQ,EAAjC;AACA,cAAIG,KAAK,GAAG,IAAIZ,KAAJ,GAAYa,OAAZ,CAAoB,KAAKC,UAAL,CAAgBL,OAAhB,CAApB,CAAZ;AACA,eAAKM,QAAL,CAAcH,KAAd,GAAsBA,KAAtB;AAEA,eAAKI,YAAL,CAAkBC,MAAlB,GAA2BR,OAAO,CAACS,QAAR,EAA3B;AACD;;AAEOJ,QAAAA,UAAU,CAACK,GAAD,EAAc;AAC9B,cAAIC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASH,GAAG,GAAGhB,WAAW,CAAC,IAAD,EAAO,OAAP,CAA1B,IAA6C,QAA9D;AACA,cAAIoB,QAAQ,GAAGH,UAAU,CAACF,QAAX,CAAoB,EAApB,EAAwBM,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAf;AAEA,iBAAQ,IAAGD,QAAS,EAApB;AACD;;AApBqC,O;;;;;iBAEX,I;;;;;;;iBAGG,I","sourcesContent":["import {\n  _decorator,\n  Color,\n  Component,\n  Label,\n  Node,\n  random,\n  randomRange,\n  Sprite,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"ItemComp\")\nexport class ItemComp extends Component {\n  @property(Sprite)\n  private bgSprite: Sprite = null;\n\n  @property(Label)\n  private contentLabel: Label = null;\n\n  setData(numData: number) {\n    this.node.name = `item_${numData}`;\n    let color = new Color().fromHEX(this.numToColor(numData));\n    this.bgSprite.color = color;\n\n    this.contentLabel.string = numData.toString();\n  }\n\n  private numToColor(num: number) {\n    let clampedNum = Math.abs(num * randomRange(4000, 1000000)) % 0xffffff;\n    let hexColor = clampedNum.toString(16).padStart(6, \"0\");\n\n    return `#${hexColor}`;\n  }\n}\n"]}